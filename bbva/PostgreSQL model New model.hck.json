{
    "modelName": "New model",
    "collections": [
        {
            "collectionName": "category",
            "type": "object",
            "properties": [
                {
                    "code": "",
                    "name": "category_id",
                    "isActivated": true,
                    "primaryKey": true,
                    "unique": false,
                    "exclusiveMinimum": false,
                    "exclusiveMaximum": false,
                    "mode": "integer",
                    "childType": "numeric",
                    "type": "numeric",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "default": "nextval('category_category_id_seq'::regclass)",
                    "precision": 32,
                    "scale": 0,
                    "udt_name": "int4",
                    "numberOfArrayDimensions": 0,
                    "timePrecision": "",
                    "primaryKeyOptions": [
                        {
                            "constraintName": "category_pkey",
                            "indexStorageParameters": "",
                            "indexTablespace": null,
                            "GUID": "9f2d71cb-c2f3-4b83-89e3-73d5b2cf6b2e"
                        }
                    ],
                    "GUID": "79692c72-52c6-4fd0-aa7b-0d92b3732d73",
                    "required": true,
                    "error": {}
                },
                {
                    "code": "",
                    "name": "name",
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "mode": "varchar",
                    "length": 25,
                    "childType": "char",
                    "type": "string",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "udt_name": "varchar",
                    "numberOfArrayDimensions": 0,
                    "timePrecision": "",
                    "GUID": "bc7e76d1-84e1-4f7b-a875-47e5fc9046fb",
                    "required": true,
                    "error": {}
                },
                {
                    "code": "",
                    "name": "last_update",
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "mode": "timestamp",
                    "scale": 7,
                    "childType": "datetime",
                    "type": "string",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "default": "now()",
                    "timePrecision": "",
                    "udt_name": "timestamp",
                    "numberOfArrayDimensions": 0,
                    "timezone": "WITHOUT TIME ZONE",
                    "GUID": "a7e4d1eb-8419-4a8d-9303-c7422af1e4c7",
                    "required": true,
                    "error": {}
                }
            ],
            "definitions": {
                "type": "definitions",
                "GUID": "f7af9e72-021a-4550-bb9e-cb90f909b6cb",
                "properties": []
            },
            "isActivated": true,
            "additionalProperties": true,
            "memory_optimized": false,
            "collectionUsers": [],
            "ifNotExist": true,
            "on_commit": "PRESERVE ROWS",
            "table_tablespace_name": "pg_default",
            "GUID": "be83b6e7-b766-405e-bafa-4c0891c6051b",
            "bucketId": "e6a3d5ea-5984-4815-a441-fac5ea38b28e",
            "code": "",
            "temporary": false,
            "unlogged": false,
            "inherits": [],
            "primaryKey": [],
            "uniqueKey": [],
            "Indxs": [
                {
                    "isActivated": true,
                    "index_method": "btree",
                    "ifNotExist": true,
                    "only": true,
                    "index_tablespace_name": "",
                    "GUID": "3747a059-50c7-4736-93d5-39538510e32a",
                    "indxName": "category_pkey",
                    "unique": true,
                    "columns": [
                        {
                            "keyId": "79692c72-52c6-4fd0-aa7b-0d92b3732d73",
                            "sortOrder": "ASC",
                            "nullsOrder": "NULLS LAST",
                            "collation": null,
                            "opclass": "pg_catalog.int4_ops"
                        }
                    ],
                    "include": [],
                    "where": ""
                }
            ],
            "chkConstr": [],
            "triggers": [
                {
                    "triggerType": "BEFORE",
                    "GUID": "1a78c0a8-8262-4cbc-9bb3-490f09d6d153",
                    "name": "last_updated",
                    "triggerDescription": null,
                    "triggerConstraint": false,
                    "triggerEvents": [
                        {
                            "GUID": "53be7afd-02fa-40f4-bf28-631c6f69912d",
                            "triggerEvent": "UPDATE"
                        }
                    ],
                    "triggerUpdateColumns": [],
                    "triggerReferencing": false,
                    "triggerEachRowStatement": "FOR EACH ROW",
                    "triggerCondition": null,
                    "triggerFunction": "last_updated()"
                }
            ],
            "hackoladeMeta": {
                "validationErrors": {}
            }
        },
        {
            "collectionName": "city",
            "type": "object",
            "properties": [
                {
                    "code": "",
                    "name": "city_id",
                    "isActivated": true,
                    "primaryKey": true,
                    "unique": false,
                    "exclusiveMinimum": false,
                    "exclusiveMaximum": false,
                    "mode": "integer",
                    "childType": "numeric",
                    "type": "numeric",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "default": "nextval('city_city_id_seq'::regclass)",
                    "precision": 32,
                    "scale": 0,
                    "udt_name": "int4",
                    "numberOfArrayDimensions": 0,
                    "timePrecision": "",
                    "primaryKeyOptions": [
                        {
                            "constraintName": "city_pkey",
                            "indexStorageParameters": "",
                            "indexTablespace": null,
                            "GUID": "b25f7b04-d373-4e26-b3d9-7ce386b07048"
                        }
                    ],
                    "GUID": "83df7b85-6e20-43c7-bd79-4e4031147ce1",
                    "required": true,
                    "error": {}
                },
                {
                    "code": "",
                    "name": "city",
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "mode": "varchar",
                    "length": 50,
                    "childType": "char",
                    "type": "string",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "udt_name": "varchar",
                    "numberOfArrayDimensions": 0,
                    "timePrecision": "",
                    "GUID": "fcc55873-e65c-4432-916e-3a38111d8f24",
                    "required": true,
                    "error": {}
                },
                {
                    "code": "",
                    "name": "country_id",
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "exclusiveMinimum": false,
                    "exclusiveMaximum": false,
                    "mode": "smallint",
                    "childType": "numeric",
                    "type": "numeric",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "precision": 16,
                    "scale": 0,
                    "udt_name": "int2",
                    "numberOfArrayDimensions": 0,
                    "timePrecision": "",
                    "GUID": "672a2499-7c1e-4da9-b241-2b822bebd8d4",
                    "required": true,
                    "relationshipType": "Foreign Key",
                    "foreignField": [],
                    "parentRelationship": "a30145f3-f20f-4dcb-ab05-3c934285c00d",
                    "error": {}
                },
                {
                    "code": "",
                    "name": "last_update",
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "mode": "timestamp",
                    "scale": 7,
                    "childType": "datetime",
                    "type": "string",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "default": "now()",
                    "timePrecision": "",
                    "udt_name": "timestamp",
                    "numberOfArrayDimensions": 0,
                    "timezone": "WITHOUT TIME ZONE",
                    "GUID": "bdd88f1d-ace1-4beb-a3d0-682a0dcfefa3",
                    "required": true,
                    "error": {}
                }
            ],
            "definitions": {
                "type": "definitions",
                "GUID": "eddeda87-4f2e-47de-896d-292ffe435dd6",
                "properties": []
            },
            "isActivated": true,
            "additionalProperties": true,
            "memory_optimized": false,
            "collectionUsers": [],
            "ifNotExist": true,
            "on_commit": "PRESERVE ROWS",
            "table_tablespace_name": "pg_default",
            "GUID": "d386ad1c-b4ca-46c8-b45c-bd3a5ae5e60f",
            "bucketId": "e6a3d5ea-5984-4815-a441-fac5ea38b28e",
            "code": "",
            "temporary": false,
            "unlogged": false,
            "inherits": [],
            "primaryKey": [],
            "uniqueKey": [],
            "Indxs": [
                {
                    "isActivated": true,
                    "index_method": "btree",
                    "ifNotExist": true,
                    "only": true,
                    "index_tablespace_name": "",
                    "GUID": "5b5c37e4-92ca-4d92-bf3a-5b1dcc42d66f",
                    "indxName": "city_pkey",
                    "unique": true,
                    "columns": [
                        {
                            "keyId": "83df7b85-6e20-43c7-bd79-4e4031147ce1",
                            "sortOrder": "ASC",
                            "nullsOrder": "NULLS LAST",
                            "collation": null,
                            "opclass": "pg_catalog.int4_ops"
                        }
                    ],
                    "include": [],
                    "where": ""
                },
                {
                    "isActivated": true,
                    "index_method": "btree",
                    "ifNotExist": true,
                    "only": true,
                    "index_tablespace_name": "",
                    "GUID": "c97e8b2c-a7ab-4cee-9622-e33a9b3861e7",
                    "indxName": "idx_fk_country_id",
                    "unique": false,
                    "columns": [
                        {
                            "keyId": "672a2499-7c1e-4da9-b241-2b822bebd8d4",
                            "sortOrder": "ASC",
                            "nullsOrder": "NULLS LAST",
                            "collation": null,
                            "opclass": "pg_catalog.int2_ops"
                        }
                    ],
                    "include": [],
                    "where": ""
                }
            ],
            "chkConstr": [],
            "triggers": [
                {
                    "triggerType": "BEFORE",
                    "GUID": "96701089-b677-414d-91e8-10542469808a",
                    "name": "last_updated",
                    "triggerDescription": null,
                    "triggerConstraint": false,
                    "triggerEvents": [
                        {
                            "GUID": "37e0ccbd-25f1-489e-a4da-e09d1e3d5e60",
                            "triggerEvent": "UPDATE"
                        }
                    ],
                    "triggerUpdateColumns": [],
                    "triggerReferencing": false,
                    "triggerEachRowStatement": "FOR EACH ROW",
                    "triggerCondition": null,
                    "triggerFunction": "last_updated()"
                }
            ],
            "hackoladeMeta": {
                "validationErrors": {}
            }
        },
        {
            "collectionName": "New table",
            "type": "object",
            "properties": [
                {
                    "name": "name",
                    "hackoladeMeta": {},
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "mode": "varchar",
                    "length": 10,
                    "childType": "char",
                    "type": "string",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "GUID": "7ab63bf3-7534-4e19-aeb8-3e48a3512714",
                    "error": {}
                }
            ],
            "definitions": {
                "type": "definitions",
                "properties": [],
                "GUID": "76e93f7c-cc43-4bae-9390-3859cff0ac35"
            },
            "isActivated": true,
            "additionalProperties": false,
            "memory_optimized": false,
            "collectionUsers": [],
            "ifNotExist": true,
            "on_commit": "PRESERVE ROWS",
            "table_tablespace_name": "pg_default",
            "GUID": "e6d2e4de-79d5-4cb0-930f-a8b4f784f88a",
            "bucketId": "e6a3d5ea-5984-4815-a441-fac5ea38b28e"
        },
        {
            "collectionName": "test2",
            "type": "object",
            "properties": [
                {
                    "name": "test",
                    "hackoladeMeta": {},
                    "isActivated": true,
                    "primaryKey": false,
                    "unique": false,
                    "exclusiveMinimum": false,
                    "exclusiveMaximum": false,
                    "mode": "integer",
                    "childType": "numeric",
                    "type": "numeric",
                    "compositeKey": [
                        "compositePartitionKey",
                        "compositePrimaryKey",
                        "compositeUniqueKey",
                        "triggerUpdateColumns"
                    ],
                    "compositePartitionKey": false,
                    "compositePrimaryKey": false,
                    "compositeUniqueKey": false,
                    "triggerUpdateColumns": false,
                    "GUID": "04d65934-da25-4dfd-b674-4f40ff96d4f3",
                    "error": {}
                }
            ],
            "definitions": {
                "type": "definitions",
                "properties": [],
                "GUID": "6c2dc27d-e247-47f0-a9bd-5d714d507bb3"
            },
            "isActivated": true,
            "additionalProperties": false,
            "memory_optimized": false,
            "collectionUsers": [],
            "ifNotExist": true,
            "on_commit": "PRESERVE ROWS",
            "table_tablespace_name": "pg_default",
            "GUID": "08549a89-eadf-4743-9e2f-6233dd9cfb87",
            "bucketId": "e6a3d5ea-5984-4815-a441-fac5ea38b28e"
        }
    ],
    "buckets": [
        {
            "name": "public",
            "type": "bucket",
            "collectionIds": [
                "be83b6e7-b766-405e-bafa-4c0891c6051b",
                "d386ad1c-b4ca-46c8-b45c-bd3a5ae5e60f",
                "e6d2e4de-79d5-4cb0-930f-a8b4f784f88a",
                "08549a89-eadf-4743-9e2f-6233dd9cfb87"
            ],
            "backgroundColor": {
                "r": 216,
                "g": 0,
                "b": 115,
                "a": 1
            },
            "show": true,
            "isActivated": true,
            "ifNotExist": true,
            "GUID": "e6a3d5ea-5984-4815-a441-fac5ea38b28e",
            "hackoladeMeta": {},
            "UDFs": [
                {
                    "functionLanguage": "sql",
                    "functionVolatility": "IMMUTABLE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "2257684f-6ce3-4a08-bc4a-845d194d6bfd",
                    "name": "_group_concat",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "69235aff-e6c3-46a6-acaa-aed814cd7011",
                            "argumentMode": "IN",
                            "argumentName": null,
                            "argumentType": "text",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "f662e996-c642-4f06-b3d3-0c40c425c28c",
                            "argumentMode": "IN",
                            "argumentName": null,
                            "argumentType": "text",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": false,
                    "functionReturnType": "text",
                    "functionBody": "\nSELECT CASE\n  WHEN $2 IS NULL THEN $1\n  WHEN $1 IS NULL THEN $2\n  ELSE $1 || ', ' || $2\nEND\n",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "sql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "8b1cdf53-a151-47e3-b616-183faf3aab55",
                    "name": "film_in_stock",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "d8dd71c7-debe-42ba-b1a5-4dcaec50836c",
                            "argumentMode": "IN",
                            "argumentName": "p_film_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "0d7a2bd8-76ed-47ae-bb79-917c08ef2441",
                            "argumentMode": "IN",
                            "argumentName": "p_store_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "945c90e2-dce4-447c-bf1c-38e777afe699",
                            "argumentMode": "OUT",
                            "argumentName": "p_film_count",
                            "argumentType": "integer",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": true,
                    "functionReturnType": "int4",
                    "functionBody": "\n     SELECT inventory_id\n     FROM inventory\n     WHERE film_id = $1\n     AND store_id = $2\n     AND inventory_in_stock(inventory_id);\n",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "sql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "387d8a2c-8909-4d49-8a81-b1433dd9ea0a",
                    "name": "film_not_in_stock",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "6c8580c5-accb-415a-8e04-b63b1a86f225",
                            "argumentMode": "IN",
                            "argumentName": "p_film_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "440f052d-a1a6-4e33-86e2-9bc55dcf7cb2",
                            "argumentMode": "IN",
                            "argumentName": "p_store_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "af3ba8ae-86e0-434e-80ce-644f5196eba4",
                            "argumentMode": "OUT",
                            "argumentName": "p_film_count",
                            "argumentType": "integer",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": true,
                    "functionReturnType": "int4",
                    "functionBody": "\n    SELECT inventory_id\n    FROM inventory\n    WHERE film_id = $1\n    AND store_id = $2\n    AND NOT inventory_in_stock(inventory_id);\n",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "plpgsql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "43aeec8a-2a26-43f7-99df-bf4c2a041429",
                    "name": "get_customer_balance",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "71385d54-e6ad-4ac2-9d8a-1ec3ec382610",
                            "argumentMode": "IN",
                            "argumentName": "p_customer_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "d6b8d037-d1f2-4e00-94ba-378b6cf8db0a",
                            "argumentMode": "IN",
                            "argumentName": "p_effective_date",
                            "argumentType": "timestamp without time zone",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": false,
                    "functionReturnType": "numeric",
                    "functionBody": "\n       --#OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE\n       --#THAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:\n       --#   1) RENTAL FEES FOR ALL PREVIOUS RENTALS\n       --#   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE\n       --#   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST\n       --#   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED\nDECLARE\n    v_rentfees DECIMAL(5,2); --#FEES PAID TO RENT THE VIDEOS INITIALLY\n    v_overfees INTEGER;      --#LATE FEES FOR PRIOR RENTALS\n    v_payments DECIMAL(5,2); --#SUM OF PAYMENTS MADE PREVIOUSLY\nBEGIN\n    SELECT COALESCE(SUM(film.rental_rate),0) INTO v_rentfees\n    FROM film, inventory, rental\n    WHERE film.film_id = inventory.film_id\n      AND inventory.inventory_id = rental.inventory_id\n      AND rental.rental_date <= p_effective_date\n      AND rental.customer_id = p_customer_id;\n\n    SELECT COALESCE(SUM(IF((rental.return_date - rental.rental_date) > (film.rental_duration * '1 day'::interval),\n        ((rental.return_date - rental.rental_date) - (film.rental_duration * '1 day'::interval)),0)),0) INTO v_overfees\n    FROM rental, inventory, film\n    WHERE film.film_id = inventory.film_id\n      AND inventory.inventory_id = rental.inventory_id\n      AND rental.rental_date <= p_effective_date\n      AND rental.customer_id = p_customer_id;\n\n    SELECT COALESCE(SUM(payment.amount),0) INTO v_payments\n    FROM payment\n    WHERE payment.payment_date <= p_effective_date\n    AND payment.customer_id = p_customer_id;\n\n    RETURN v_rentfees + v_overfees - v_payments;\nEND\n",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "plpgsql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "0286b61b-c04d-47cc-909b-85831def1f04",
                    "name": "inventory_held_by_customer",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "79c50982-9e7d-4066-bfe4-42f665d225e2",
                            "argumentMode": "IN",
                            "argumentName": "p_inventory_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": false,
                    "functionReturnType": "int4",
                    "functionBody": "\nDECLARE\n    v_customer_id INTEGER;\nBEGIN\n\n  SELECT customer_id INTO v_customer_id\n  FROM rental\n  WHERE return_date IS NULL\n  AND inventory_id = p_inventory_id;\n\n  RETURN v_customer_id;\nEND ",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "plpgsql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "04308daa-1ab7-4707-b123-5ba7116cb127",
                    "name": "inventory_in_stock",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "e60b4de0-c9d4-4f5c-bc40-174b13763d9e",
                            "argumentMode": "IN",
                            "argumentName": "p_inventory_id",
                            "argumentType": "integer",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": false,
                    "functionReturnType": "bool",
                    "functionBody": "\nDECLARE\n    v_rentals INTEGER;\n    v_out     INTEGER;\nBEGIN\n    -- AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE\n    -- FOR THE ITEM OR ALL ROWS HAVE return_date POPULATED\n\n    SELECT count(*) INTO v_rentals\n    FROM rental\n    WHERE inventory_id = p_inventory_id;\n\n    IF v_rentals = 0 THEN\n      RETURN TRUE;\n    END IF;\n\n    SELECT COUNT(rental_id) INTO v_out\n    FROM inventory LEFT JOIN rental USING(inventory_id)\n    WHERE inventory.inventory_id = p_inventory_id\n    AND rental.return_date IS NULL;\n\n    IF v_out > 0 THEN\n      RETURN FALSE;\n    ELSE\n      RETURN TRUE;\n    END IF;\nEND ",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "sql",
                    "functionVolatility": "IMMUTABLE",
                    "functionNullArgs": "STRICT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "3aa0a955-4893-4121-b23c-d94746224232",
                    "name": "last_day",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "d4eac26a-b622-4563-924e-487209684b49",
                            "argumentMode": "IN",
                            "argumentName": null,
                            "argumentType": "timestamp without time zone",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": false,
                    "functionReturnType": "date",
                    "functionBody": "\n  SELECT CASE\n    WHEN EXTRACT(MONTH FROM $1) = 12 THEN\n      (((EXTRACT(YEAR FROM $1) + 1) operator(pg_catalog.||) '-01-01')::date - INTERVAL '1 day')::date\n    ELSE\n      ((EXTRACT(YEAR FROM $1) operator(pg_catalog.||) '-' operator(pg_catalog.||) (EXTRACT(MONTH FROM $1) + 1) operator(pg_catalog.||) '-01')::date - INTERVAL '1 day')::date\n    END\n",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "plpgsql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "INVOKER",
                    "functionParallel": "",
                    "GUID": "b46be5c3-a4b3-4b91-ad4e-20d03dfc7e55",
                    "name": "last_updated",
                    "functionDescription": null,
                    "functionArguments": [],
                    "functionReturnsSetOf": false,
                    "functionReturnType": "trigger",
                    "functionBody": "\nBEGIN\n    NEW.last_update = CURRENT_TIMESTAMP;\n    RETURN NEW;\nEND ",
                    "functionLeakProof": false
                },
                {
                    "functionLanguage": "plpgsql",
                    "functionVolatility": "VOLATILE",
                    "functionNullArgs": "CALLED ON NULL INPUT",
                    "functionSqlSecurity": "DEFINER",
                    "functionParallel": "",
                    "GUID": "871637c5-132d-4799-be4f-0a75bedfd99e",
                    "name": "rewards_report",
                    "functionDescription": null,
                    "functionArguments": [
                        {
                            "GUID": "670103f3-b122-4538-acd8-4a457a4f4894",
                            "argumentMode": "IN",
                            "argumentName": "min_monthly_purchases",
                            "argumentType": "integer",
                            "defaultExpression": null
                        },
                        {
                            "GUID": "771ca1c6-f11b-4db5-9dc0-db7ec0311edf",
                            "argumentMode": "IN",
                            "argumentName": "min_dollar_amount_purchased",
                            "argumentType": "numeric",
                            "defaultExpression": null
                        }
                    ],
                    "functionReturnsSetOf": true,
                    "functionReturnType": "customer",
                    "functionBody": "\nDECLARE\n    last_month_start DATE;\n    last_month_end DATE;\nrr RECORD;\ntmpSQL TEXT;\nBEGIN\n\n    /* Some sanity checks... */\n    IF min_monthly_purchases = 0 THEN\n        RAISE EXCEPTION 'Minimum monthly purchases parameter must be > 0';\n    END IF;\n    IF min_dollar_amount_purchased = 0.00 THEN\n        RAISE EXCEPTION 'Minimum monthly dollar amount purchased parameter must be > $0.00';\n    END IF;\n\n    last_month_start := CURRENT_DATE - '3 month'::interval;\n    last_month_start := to_date((extract(YEAR FROM last_month_start) || '-' || extract(MONTH FROM last_month_start) || '-01'),'YYYY-MM-DD');\n    last_month_end := LAST_DAY(last_month_start);\n\n    /*\n    Create a temporary storage area for Customer IDs.\n    */\n    CREATE TEMPORARY TABLE tmpCustomer (customer_id INTEGER NOT NULL PRIMARY KEY);\n\n    /*\n    Find all customers meeting the monthly purchase requirements\n    */\n\n    tmpSQL := 'INSERT INTO tmpCustomer (customer_id)\n        SELECT p.customer_id\n        FROM payment AS p\n        WHERE DATE(p.payment_date) BETWEEN '||quote_literal(last_month_start) ||' AND '|| quote_literal(last_month_end) || '\n        GROUP BY customer_id\n        HAVING SUM(p.amount) > '|| min_dollar_amount_purchased || '\n        AND COUNT(customer_id) > ' ||min_monthly_purchases ;\n\n    EXECUTE tmpSQL;\n\n    /*\n    Output ALL customer information of matching rewardees.\n    Customize output as needed.\n    */\n    FOR rr IN EXECUTE 'SELECT c.* FROM tmpCustomer AS t INNER JOIN customer AS c ON t.customer_id = c.customer_id' LOOP\n        RETURN NEXT rr;\n    END LOOP;\n\n    /* Clean up */\n    tmpSQL := 'DROP TABLE tmpCustomer';\n    EXECUTE tmpSQL;\n\nRETURN;\nEND\n",
                    "functionLeakProof": false
                }
            ],
            "Procedures": [],
            "code": "",
            "addFieldsToBucket": true,
            "isPlugin": true
        }
    ],
    "views": [],
    "relationships": [],
    "users": [],
    "diagramViews": [],
    "idToNameHashTable": {
        "e6a3d5ea-5984-4815-a441-fac5ea38b28e": "public",
        "8b9096ec-c3f9-4b65-997a-2f60a36f9133": "mpaa_rating",
        "3a71920f-c8ed-4695-840c-c2a2fab66f0d": "year",
        "79692c72-52c6-4fd0-aa7b-0d92b3732d73": "category_id",
        "bc7e76d1-84e1-4f7b-a875-47e5fc9046fb": "name",
        "a7e4d1eb-8419-4a8d-9303-c7422af1e4c7": "last_update",
        "be83b6e7-b766-405e-bafa-4c0891c6051b": "category",
        "83df7b85-6e20-43c7-bd79-4e4031147ce1": "city_id",
        "fcc55873-e65c-4432-916e-3a38111d8f24": "city",
        "672a2499-7c1e-4da9-b241-2b822bebd8d4": "country_id",
        "bdd88f1d-ace1-4beb-a3d0-682a0dcfefa3": "last_update",
        "d386ad1c-b4ca-46c8-b45c-bd3a5ae5e60f": "city",
        "e6d2e4de-79d5-4cb0-930f-a8b4f784f88a": "New table",
        "7ab63bf3-7534-4e19-aeb8-3e48a3512714": "name",
        "08549a89-eadf-4743-9e2f-6233dd9cfb87": "test2",
        "04d65934-da25-4dfd-b674-4f40ff96d4f3": "test"
    },
    "definitions": {
        "type": "definitions",
        "properties": [
            {
                "code": "",
                "name": "mpaa_rating",
                "isActivated": true,
                "primaryKey": false,
                "unique": false,
                "childType": "enum",
                "type": "string",
                "compositeKey": [
                    "compositePartitionKey",
                    "compositePrimaryKey",
                    "compositeUniqueKey",
                    "triggerUpdateColumns"
                ],
                "compositePartitionKey": false,
                "compositePrimaryKey": false,
                "compositeUniqueKey": false,
                "triggerUpdateColumns": false,
                "enum": [
                    "G",
                    "PG",
                    "PG-13",
                    "R",
                    "NC-17"
                ],
                "GUID": "8b9096ec-c3f9-4b65-997a-2f60a36f9133",
                "error": {}
            },
            {
                "code": "",
                "name": "year",
                "isActivated": true,
                "primaryKey": false,
                "unique": false,
                "childType": "domain",
                "type": "string",
                "compositeKey": [
                    "compositePartitionKey",
                    "compositePrimaryKey",
                    "compositeUniqueKey",
                    "triggerUpdateColumns"
                ],
                "compositePartitionKey": false,
                "compositePrimaryKey": false,
                "compositeUniqueKey": false,
                "triggerUpdateColumns": false,
                "underlyingType": "integer",
                "collation": "",
                "default": "",
                "required": false,
                "checkConstraints": [
                    {
                        "name": "year_check",
                        "expression": "((VALUE >= 1901) AND (VALUE <= 2155))",
                        "GUID": "e0be9e81-14a1-4868-b446-6e6381dca8ca"
                    }
                ],
                "GUID": "3a71920f-c8ed-4695-840c-c2a2fab66f0d",
                "error": {}
            }
        ],
        "GUID": "a0c84dd8-d63c-450a-9d9b-0a67c09698bf"
    },
    "polyglotDefinitions": {
        "type": "polyglotDefinitions",
        "properties": [],
        "GUID": "bceffc13-5cb4-4d99-ae13-45c4fd54ced4"
    },
    "externalDefinitions": {
        "type": "externalDefinitions",
        "properties": [],
        "GUID": "25bfa2f9-8dd4-44ad-86f2-a5c6cfdfba65"
    },
    "sources": [],
    "decorativeSymbols": [],
    "dbVersion": "v15.x",
    "dbVendor": "PostgreSQL",
    "tablespace_name": "pg_default",
    "encoding": "UTF8",
    "appTarget": "PostgreSQL",
    "creationTS": "2023-05-10T16:18:35.932Z",
    "GUID": "9da70f56-4904-4692-8672-dda5c9a861df",
    "isLineageEnabled": false,
    "database_name": "dvdrental",
    "LC_COLLATE": "en_US.UTF-8",
    "LC_CTYPE": "en_US.UTF-8",
    "lastModifTS": "2023-05-10T16:21:08.885Z",
    "persistenceSchemaVersion": "6",
    "isCreatedByPlugin": true,
    "pluginInformation": {
        "pluginName": "PostgreSQL",
        "pluginVersion": "0.1.42",
        "pluginEngineVersion": "1.0.0"
    },
    "applicationInformation": {
        "version": "6.10.0"
    },
    "hackoladeMeta": {},
    "settings": {
        "centralPane": {
            "dbLevel": {
                "erd": [
                    {
                        "GUID": "be83b6e7-b766-405e-bafa-4c0891c6051b",
                        "x": 1250,
                        "y": 1050,
                        "width": 267,
                        "height": 84,
                        "color": {}
                    },
                    {
                        "GUID": "d386ad1c-b4ca-46c8-b45c-bd3a5ae5e60f",
                        "x": 1050,
                        "y": 1200,
                        "width": 267,
                        "height": 102,
                        "color": {}
                    },
                    {
                        "GUID": "e6d2e4de-79d5-4cb0-930f-a8b4f784f88a",
                        "x": 1457,
                        "y": 1261,
                        "width": 199,
                        "height": 51,
                        "color": {}
                    },
                    {
                        "GUID": "08549a89-eadf-4743-9e2f-6233dd9cfb87",
                        "x": 1482,
                        "y": 1184,
                        "width": 164,
                        "height": 51,
                        "color": {}
                    }
                ],
                "erdDefinitions": {
                    "erd": [],
                    "rootPath": [],
                    "entities": [],
                    "decorativeSymbols": []
                },
                "buckets": [
                    {
                        "x": 1010,
                        "y": 1010,
                        "GUID": "e6a3d5ea-5984-4815-a441-fac5ea38b28e"
                    }
                ],
                "collapsedNodes": [],
                "activeRelationship": "",
                "activeRelationshipFields": {
                    "childField": [],
                    "parentField": []
                },
                "selectedCollections": [],
                "displayColorPicker": false,
                "graphView": {
                    "erd": [],
                    "buckets": [],
                    "decorativeSymbols": [],
                    "forceLayout": true,
                    "defaultLinkLength": 300
                },
                "diagramViews": [],
                "decorativeSymbols": [],
                "nestedCollectionsLayout": "horizontal",
                "options": [],
                "relationshipUpdateDisabled": false,
                "displayOptions": {
                    "dndHandles": false
                }
            },
            "collectionLevel": {},
            "changed": false
        },
        "dtDiagram": {
            "collapsedNodes": [],
            "shouldDistributeCollections": false
        }
    }
}